include(CheckCCompilerFlag)
include(CheckCXXCompilerFlag)

macro(list_contains VAR VALUE LISTSTR)
  set(${VAR})
  string(REGEX MATCHALL "[^ ]+\ |[^ ]+$" LISTVAR "${LISTSTR}")
  foreach(OTHER IN LISTS LISTVAR)
    if("${VALUE}" STREQUAL "${OTHER}")
      set(${VAR} TRUE)
    endif()
  endforeach()
endmacro()

macro(flagvar FLAG FLAGNAME PREFIX)
  string(REPLACE "-" "_" RESULT "${FLAG}")
  string(REPLACE "/" "_" RESULT "${RESULT}")
  string(REPLACE "," "_" RESULT "${RESULT}")
  string(REPLACE "=" "_" RESULT "${RESULT}")
  string(REPLACE "+" "P" RESULT "${RESULT}")
  string(TOUPPER "${PREFIX}_ACCEPTS${RESULT}" ${FLAGNAME})
endmacro()

macro(try_add_c_flag FLAG)
  flagvar(${FLAG} FLAGNAME C)
  check_c_compiler_flag(${FLAG} ${FLAGNAME})
  if("${ARGV1}" STREQUAL "")
    set(FLAGSNAME "CMAKE_C_FLAGS")
  else()
    set(FLAGSNAME "CMAKE_C_FLAGS_${ARGV1}")
  endif()
  list_contains(ALREADY_PRESENT ${FLAG} "${${FLAGSNAME}}")
  if("${${FLAGNAME}}" AND NOT ALREADY_PRESENT)
    set(${FLAGSNAME} "${${FLAGSNAME}} ${FLAG}")
  endif()
endmacro()

macro(try_add_cxx_flag FLAG)
  flagvar(${FLAG} FLAGNAME CXX)
  check_cxx_compiler_flag(${FLAG} ${FLAGNAME})
  if("${ARGV1}" STREQUAL "")
    set(FLAGSNAME "CMAKE_CXX_FLAGS")
  else()
    set(FLAGSNAME "CMAKE_CXX_FLAGS_${ARGV1}")
  endif()
  list_contains(ALREADY_PRESENT ${FLAG} "${${FLAGSNAME}}")
  if("${${FLAGNAME}}" AND NOT ALREADY_PRESENT)
    set(${FLAGSNAME} "${${FLAGSNAME}} ${FLAG}")
  endif()
endmacro()

