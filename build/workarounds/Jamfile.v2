import project ;

project.initialize $(__name__) ;

project workarounds 
       : usage-requirements
          <include>$(TOP)/build/workarounds/all
       ;

# Cygwin
alias configuration : : <os>CYGWIN <toolset>gcc :
       : <include>$(TOP)/build/workarounds/cygwin
       ;

# MinGW
alias configuration : : <os>NT <toolset>gcc :
       : <include>$(TOP)/build/workarounds/mingw
       ;

# MSVC
alias configuration : : <os>NT <toolset>msvc :
       : <define>WIN32
         <define>__WIN32__
         <define>_CRT_SECURE_NO_DEPRECATE
         <define>_SCL_SECURE_NO_DEPRECATE
         <define>_HAS_ITERATOR_DEBUGGING=0
         <define>_SECURE_SCL=0
         <include>$(TOP)/build/workarounds/msvc
         <include>$(TOP)/3rd-party/getopt
       ;

# Mac OS X, darwin
alias configuration : : <toolset>darwin :
       : <define>__darwin__
         <include>$(TOP)/build/workarounds
         <cxxflags>"-std=c++98 -ansi"
         <cflags>"-std=c99"
         <debug-symbols>on:<cxxflags>"-ggdb"
         <linkflags>"-undefined dynamic_lookup"
       ;

# Sun, Solaris
alias configuration : : <toolset>sun :
       : <include>$(TOP)/build/workarounds
       ;

# Default gcc (known to work on Linux)
alias configuration : : <toolset>gcc :
       : <include>$(TOP)/build/workarounds
         <cxxflags>"-std=c++98 -ansi"
         <cflags>"-std=c99"
         <toolset-gcc:version>4.3.0:<cxxflags>"-std=c++98 -ansi -fno-strict-overflow"
         <toolset-gcc:version>4.3.0:<cflags>"-std=c99 -fno-strict-overflow"
         <link>static:<linkflags>-export-dynamic
       ;

