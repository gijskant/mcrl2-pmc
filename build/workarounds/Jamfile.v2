import project ;

project.initialize $(__name__) ;

# versions of gcc without signed overflow (breaks ATerm library)
gcc-no-overflow = 4.3.0 4.3.1 ;

project workarounds 
       : usage-requirements
          <include>$(TOP)/build/workarounds/all
       ;

# Cygwin
alias configuration : : <os>CYGWIN <toolset>gcc :
       : <include>$(TOP)/build/workarounds/cygwin
         <toolset-gcc:version>$(gcc-no-overflow):<cxxflags>"-fno-strict-overflow"
         <toolset-gcc:version>$(gcc-no-overflow):<cflags>"-std=c99 -fno-strict-overflow"
       ;

# MinGW
alias configuration : : <os>NT <toolset>gcc :
       : <include>$(TOP)/build/workarounds/mingw
         <toolset-gcc:version>$(gcc-no-overflow):<define>_GLIBCPP_NO_CONCEPT_CHECKS
         <toolset-gcc:version>$(gcc-no-overflow):<cxxflags>"-fno-strict-overflow"
         <toolset-gcc:version>$(gcc-no-overflow):<cflags>"-std=c99 -fno-strict-overflow"
       ;

# MSVC
alias configuration : : <os>NT <toolset>msvc :
       : <define>WIN32
         <define>__WIN32__
         <define>_CRT_SECURE_NO_DEPRECATE
         <define>_SCL_SECURE_NO_WARNINGS
         <define>_SCL_SECURE_NO_DEPRECATE
         <define>_HAS_ITERATOR_DEBUGGING=0
         <define>_SECURE_SCL=0
         <include>$(TOP)/build/workarounds/msvc
         <exception-handling>on
       ;

# Intel compiler on Windows
alias configuration : : <os>NT <toolset>intel :
       : <define>WIN32
         <define>__WIN32__
         <define>_CRT_SECURE_NO_DEPRECATE
         <define>_SCL_SECURE_NO_WARNINGS
         <define>_SCL_SECURE_NO_DEPRECATE
         <define>_HAS_ITERATOR_DEBUGGING=0
         <define>_SECURE_SCL=0
         <include>$(TOP)/build/workarounds/msvc
         <exception-handling>on
       ;

# Mac OS X, darwin
alias configuration : : <toolset>darwin :
       : <define>__darwin__
         <include>$(TOP)/build/workarounds
         <cxxflags>"-std=c++98"
         <cflags>"-std=c99"
         <debug-symbols>on:<cxxflags>"-ggdb"
         <linkflags>"-undefined dynamic_lookup"
       ;

# Sun, Solaris
alias configuration : : <toolset>sun :
       : <include>$(TOP)/build/workarounds
       ;

# Default gcc (known to work on Linux)
alias configuration : : <toolset>gcc :
       : <include>$(TOP)/build/workarounds
         <toolset-gcc:version>$(gcc-no-overflow):<cxxflags>"-std=c++98 -fno-strict-overflow"
         <toolset-gcc:version>$(gcc-no-overflow):<cflags>"-std=c99 -fno-strict-overflow"
         <link>static:<linkflags>-export-dynamic
       ;

alias configuration : : :
       : <include>$(TOP)/build/workarounds
       ;
