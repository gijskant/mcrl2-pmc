import os ;
import common ;
import notfile ;
import path ;

include $(TOP)/build/config.jam ;

actions quietly prepare {
  cd $(<:D)

  /Developer/Tools/Rez -t APPL -o $(>:B) $(TOP)/build/macosx/sample.r
  /Developer/Tools/SetFile -a C $(>:B)
}

# Creates an application bundle on Mac OS X
rule make_bundle ( target : executable info icon : requirements * ) {

  local base_target     = [ path.basename $(target) ] ;
  local base_executable = [ path.basename $(executable) ] ;

  if install in [ MATCH "^-?-?(install)" : [ modules.peek : ARGV ] ] {

    notfile $(target).app/Contents/MacOS/dummy
         : @prepare
         : $(executable)
         ;
 
    make $(target).app/Contents/Info.plist
         : $(info)
         : common.copy
         ;
 
    explicit $(target).app/Contents/MacOS/dummy $(target).app/Contents/Info.plist ;
 
    install $(base_executable)-bundle
         : $(executable)
         : <dependency>$(target).app/Contents/MacOS/dummy
           <conditional>@prepare
         : <dependency>$(target).app/Contents/Info.plist
           <dependency>$(base_executable)-info
           <dependency>$(base_executable)-icon
           <location>$(target).app/Contents/MacOS
           $(requirements)
         ;
 
    install $(base_executable)-info
         : $(TOP)/build/macosx/PkgInfo
         : <location>$(target).app/Contents
         ;
 
    install $(base_executable)-icon
         : $(icon)
         : <location>$(target).app/Contents/Resources
         ;
 
    explicit $(base_executable)-info $(base_executable)-icon $(base_executable)-bundle ;

    notfile "$(BIN_DIR)/$(base_executable)-dummy"
           : @prepare
           : $(executable)
           ;
  }

  notfile prepare_executable 
       : @prepare
       : $(executable)
       ;
}

local caller = [ CALLER_MODULE ] ;

EXPORT $(__name__) : make_bundle ;
IMPORT $(__name__) : prepare : $(caller) : $(caller).prepare ;
