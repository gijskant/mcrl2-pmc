# Author: Jeroen van der Wulp
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

import type ;
import errors : error ;
import generators ;
import targets ;
import project ;
import path ;
import feature : feature ;
import toolset : flags ;
import "class" : new ;

type.register MAC_APPLICATION_BUNDLE : app ;

feature icon : : free path ;
feature info : : free path ;

generators.register-standard $(__name__).make-bundle : EXE : MAC_APPLICATION_BUNDLE ;

flags $(__name__).make-bundle INFO <info> ;
flags $(__name__).make-bundle ICON <icon> ;
flags $(__name__).make-bundle LOCATION <location> ;

SAMPLE_R = $(__name__:P)/sample.r ;

actions quietly make-bundle {
  mkdir -p $(LOCATION)/$(<:BS)/Contents/MacOS
  mkdir -p $(LOCATION)/$(<:BS)/Contents/Resources
  echo 'APPL????' > $(LOCATION)/$(<:BS)/Contents/PkgInfo
  cp $(INFO) $(LOCATION)/$(<:BS)/Contents/Info.plist
  cp $(ICON) $(LOCATION)/$(<:BS)/Contents/Resources

  /Developer/Tools/Rez -t APPL -d __DARWIN__ -d __WXMAC__ Carbon.r $(SAMPLE_R) -o $(LOCATION)/bin/$(>:BS)

  ln -f $(LOCATION)/bin/$(>:BS) $(LOCATION)/$(<:BS)/Contents/MacOS/$(>:BS)
  /Developer/Tools/SetFile -a C $(LOCATION)/$(<:BS)/Contents/MacOS/$(>:BS)
}

actions quietly existing rez {
  /Developer/Tools/Rez -t APPL -o $(>) $(SAMPLE_R)
}

rule mac-bundle ( target : executable info icon : requirements * : default-build * ) {
  local project  = [ project.current ] ;

  requirements += <action>make-bundle ;

  if [ MATCH "\.(icns)" : $(icon) ] {
    requirements += <icon>$(icon) ;
  }
  else {
    error "missing icon file (.icns)" ;
  }

  if [ MATCH "\.(plist)$" : $(info) ] {
    requirements += <info>$(info) ;
  }
  else {
    error "missing info file (.plist)" ;
  }

  targets.main-target-alternative
     [ new typed-target $(target) : $(project) : MAC_APPLICATION_BUNDLE
     : [ targets.main-target-sources $(executable) : $(target) ]
     : [ targets.main-target-requirements $(requirements) : $(project) ]
     : [ targets.main-target-default-build $(default-build) : $(project) ]
     ] ;

  return $(target) ;
}

rule mac-rez ( sources + ) {
  if [ modules.peek OS ] = MACOSX {
    import notfile ;

    for s in $(sources) {
      notfile rez-$(s) : @$(__name__).rez : $(s) ;
    }
  }

  return $(sources) ;
}

IMPORT $(__name__) : mac-bundle : : mac-bundle ;
IMPORT $(__name__) : mac-rez : : mac-rez ;
