<refentry id="lpsformcheck">
 <info>
  <date>2005-2007</date>
 </info>

<refmeta>
  <refentrytitle>lpsformcheck</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo class="source">lpsformcheck</refmiscinfo>
  <refmiscinfo class="version"></refmiscinfo>
  <refmiscinfo class="manual">User Commands</refmiscinfo>
</refmeta>

<refnamediv>
  <refname>lpsformcheck</refname>
  <refpurpose>check formulas using the data specification of an LPS</refpurpose>
</refnamediv>

<refsynopsisdiv>
  <cmdsynopsis>
    <command>&lpsformcheck;</command>
    <arg choice="plain" rep="repeat"><arg choice="opt">&option;</arg></arg>
    <arg choice="opt">&infile;</arg>
    <arg choice="req">&opt_formulas;=&formulas;</arg>
  </cmdsynopsis>
</refsynopsisdiv>

<refsect1>
  <title>Description</title>
  <para>
    The term "formula" in the following text denotes arbitrary expressions of sort &sort_bool; in the mCRL2 format.
</para>
  <para>
    All formulas in the list of formulas in internal mCRL2 format as found in
    &formulas; are checked using the data specification of the mCRL2 LPS as found in
    &infile;. The &lpsformcheck; tool indicates whether each formula is a tautology or a
    contradiction. If the tool is unable to determine whether a formula is a
    tautology or a contradiction, it indicates this fact.
  </para>

  <para>
    If &infile; is not specified, the LPS is read from &stdin;.
  </para>

  <para>
    In some cases &lpsformcheck; is unable to determine whether a
    formula is a tautology or a contradiction. The option &opt_verbose; gives
    insight into what the prover used by the tool is doing and can be used to see if
    rewrite rules have to be added to the specification in order to enable the prover
    to determine that certain formulas are indeed tautologies or contradictions.
  </para>

  <para>
    The &lpsformcheck; tool uses a BDD based prover to check the formulas. In some cases
    it may be useful to use an SMT solver to assist the prover. The SMT solver can further
    reduce BDDs by removing inconsistent paths. A specific SMT solver can be chosen using
    the option &opt_smt_solver;=&solver;. Either
  the SMT solver &solver_ario-lnk; or &solver_cvc_lite-lnk; can be used.
  To use one of these solvers, the directory containing the
    corresponding executable must be in the path.
  </para>

</refsect1>

<refsect1>
<title>Options</title>
<para>
  Mandatory arguments to long options are mandatory for short options too.
  <variablelist>
    <varlistentry>
      <term>&opt_f;</term>
      <term>&opt_formulas;=&formulas;</term>
      <listitem>
        <para>
          Use the list of formulas in internal mCRL2 format as found in
          &formulas; as input
        </para>
      </listitem>
    </varlistentry>

  <varlistentry>
    <term>&opt_c;</term>
    <term>&opt_counter_example;</term>
    <listitem>
      <para>
        Give a valuation for which the current
        formula does not hold, in case the current
        formula is neither a contradiction nor a
        tautology
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_w;</term>
    <term>&opt_witness;</term>
    <listitem>
      <para>
        Give a valuation for which the current
        formula holds, in case the current formula
        is neither a contradiction nor a tautology
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_p;</term>
    <term>&opt_print_dot;=&prefix;</term>
    <listitem>
      <para>
        Save a .dot file of the resulting BDD if
        it is impossible to determine whether a
        formula is a contradiction or a tautology
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_h;</term>
    <term>&opt_help;</term>
    <listitem>
      <para>
        Display help message and terminate
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_version;</term>
    <listitem>
      <para>
        Display version information and terminate
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_q;</term>
    <term>&opt_quiet;</term>
    <listitem>
      <para>
        Do not display warning messages
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_v;</term>
    <term>&opt_verbose;</term>
    <listitem>
      <para>
        Display concise intermediate messages
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_d;</term>
    <term>&opt_debug;</term>
    <listitem>
      <para>
        Display detailed intermediate messages
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_r;</term>
    <term>&opt_rewrite_strategy;=&strategy;</term>
    <listitem>
      <para>
        Use the specified &strategy; as rewrite
        strategy (see &rewriter-lnk; manual page).
        By default, &strat_jitty_string; is used
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_t;</term>
    <term>&opt_time_limit;=&seconds;</term>
    <listitem>
      <para>
        Spend at most the specified number of &seconds; on proving
        a single formula
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_z;</term>
    <term>&opt_smt_solver;=&solver;</term>
    <listitem>
      <para>
        Use the specified &solver; to remove inconsistent paths from BDDs:
        <itemizedlist spacing='compact'>
          <listitem>
            <para>
              &solver_ario_string; for the SMT solver Ario
            </para>
          </listitem>
          <listitem>
            <para>
              &solver_cvc_lite_string; for the SMT solver CVC Lite
            </para>
          </listitem>
        </itemizedlist>
        By default, no path elimination is applied
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_o;</term>
    <term>&opt_induction;</term>
    <listitem>
      <para>
        Apply induction on lists
      </para>
    </listitem>
  </varlistentry>

  </variablelist>
</para>
</refsect1>

<refsect1>
<title>Author</title>
<para>
  Written by Luc Engelen. &bugreport;
</para>
</refsect1>

</refentry>
