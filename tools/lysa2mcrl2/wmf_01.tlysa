let X = {1} in
let Y = {2} in
let XZ = {0,1} in
let YZ = {0,2} in


(new_{i in XZ} A_i)
(new_{i in YZ} B_i)
(new S) 
(
  (new_{i in X} KA_i)
  (new_{j in Y} KB_j)
  (
    /* leaking old session key */
      (
      (new Kold)
      (new mold)
      <Kold>.
      <A_1, S, A_1, {B_2, Kold} : KA_1 [at l1]>.
      <S, B_2, {A_1, Kold} : KB_2 [at l2]>.
      <A_1, B_2, {mold} : Kold [at l3]>.
      0
      )
    |
  
  /* start of protocol */  
  
      (|_{i in X, j in YZ} !
        (new K_ij)
        <A_i, S, A_i, {B_j, K_ij} : KA_i [at a1_ij dest {s1_ij}]>.
        (new m_ij)
        <A_i, B_j, {m_ij} : K_ij [at a3_ij dest {b3_ij}]>.
        0
      )
    |
      (|_{j in Y, i in XZ} !
        (S, B_j; y1_ij: C).
        decrypt y1_ij as {A_i; yK_ij: N} : KB_j [at b2_ij orig {s2_ij}] in
        (A_i, B_j; y2_ij: C).
        decrypt y2_ij as {; yM_ij: N} : yK_ij [at b3_ij orig {a3_ij}] in
        0
      )
    |
      (|_{i in XZ, j in YZ} !
        (A_i, S, A_i; z1_ij: C).
        decrypt z1_ij as {B_j; zK_ij: N} : KA_i [at s1_ij orig {a1_ij}] in
        <S, B_j, {A_i, zK_ij} : KB_j [at s2_ij dest {b2_ij}]>.
        0
      )
  )
|
  DY #(KA(0), KB(0))
)