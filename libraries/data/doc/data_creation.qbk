[section: Creating data expressions]

Data expressions can be created in two ways: directly using constructors,
or using a parser.

Constructing data expressions directly can be quite tedious:

    sort_identifier X("X");
    sort_identifier Y("Y");
    sort_identifier Z("Z");
    sort_expression XYZ = sort_arrow(sort_arrow(X, Y), Z);
    data_variable x("x", XYZ);

    data_variable three("3", sort_expr::pos());
    data_variable zero("0", sort_expr::nat());

For convenience a function `parse_data_expression` is available. This function
takes a variable declaration as optional second argument, that can be used to
specify unbound variables that appear in the expression. An example of this
is:

    #include "mcrl2/data/data.h"
    #include "mcrl2/data/parser.h"

    using namespace mcrl2::data;

    int main(int argc, char* argv[])
    {
      MCRL2_ATERMPP_INIT(argc, argv)

      using namespace data_expr;

      // two ways to create the expression m + n
      std::string var_decl = "m, n: Pos;\n";
      data_expression d1 = parse_data_expression("m+n", var_decl);

      data_variable m = parse_data_expression("m", var_decl);
      data_variable n = parse_data_expression("n", var_decl);
      data_expression d2 = plus(m, n);

      return 0;
    }

[endsect] [/ Creating data expressions]
