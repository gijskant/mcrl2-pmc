project mcrl2_basic
       : source-location ../source
       : build-dir $(BUILD_TOP)
       : requirements
          <include>../include
          <os>NT:<define>NO_DYNLOAD
       : usage-requirements
          <include>../include
          <os>NT:<define>NO_DYNLOAD
       ;

obj mcrl2parser.o
       : mcrl2parser.cpp
       : <use>/libraries/utilities//headers
         <use>/libraries/data//headers
         <include>../include/mcrl2/parse
       ;

local STRUCT_SOURCES = struct struct_core ; 

local PARSER_SOURCES = mcrl2parser.o mcrl2lexer.cpp parse.cpp typecheck.cpp regfrmtrans.cpp ;

local PRINT_SOURCES = print print_c messaging ;

alias mcrl2_basic.main
       : $(PRINT_SOURCES).cpp
         $(STRUCT_SOURCES).cpp
         $(PARSER_SOURCES)
       : <use>/libraries/lps//headers
         <use>/libraries/data//headers
         <use>/libraries/utilities//headers
       : <threading>single
       : <os>LINUX:<library>/site-config//m
         <os>LINUX:<library>/site-config//dl
         <os>CYGWIN:<library>/site-config//m
       ;

lib mcrl2_basic
       : mcrl2_basic.main
       : <link>static
         <use>/libraries/data//headers
       :
       : <library>/libraries//aterm
         <library>/libraries//data
         <library>/libraries//utilities
         <toolset>gcc:<linkflags>-Wl,-export-dynamic
       ;

alias mcrl2_basic
       : /libraries//mcrl2
       : <link>shared
         <use>/libraries/data//headers
       ;

alias mcrl2_basic.alias
       : mcrl2_basic.main
       :
       :
       : <use>/libraries/aterm//headers
       ;

alias headers
       :
       :
       :
       : <use>/libraries/aterm//headers
       ;

explicit mcrl2_basic.main mcrl2_basic.alias ;
