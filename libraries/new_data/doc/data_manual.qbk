[library Data Library
    [quickbook 1.4]
    [authors [Wesselink, Wieger]]
    [copyright 2005-2009 Technische Universiteit Eindhoven]
    [category string-text]
    [purpose
        A C++ layer for the Data Library.
    ]
]

[/  Links   ]
[def __boost__                 [@http://www.boost.org www.boost.org]]
[def __mcrllib__               [@http://www.cwi.nl/~mcrl mCRL]]
[def __mcrl2__                 [@http://mcrl2.org mCRL2]]
[def __mcrl__                  mCRL]
[def __atermlib__              [@http://www.cwi.nl/htbin/sen1/twiki/bin/view/Meta-Environment/ATerms ATerm Library]]
[def __mcrl2_primer__          [@http://www.mcrl2.org/wiki/index.php/MCRL2_Primer mCRL2 Primer]]
[def __mcrl2_language_reference__      [@http://www.mcrl2.org/wiki/index.php/Language_reference/Data_types mCRL2 Language Reference]]
[def __lps_library__           [@http://www.mcrl2.org/devel/lps/ LPS library]]
[def __sigma  [' '''&sigma;''']]

[section: Introduction]
The mCRL2 language describes processes with data. The Data Library contains everything
that has to do with the data part of the language. The main concepts are data expressions
and sorts. In the __mcrl2_language_reference__ these concepts are explained in more detail.
[endsect]

[section: Data expressions]
The class =data_expression= represents expressions like =true=, [^x > 3] and [^forall n:Nat. f(n) < 5].
Each data expression =d= has a type or sort =d.sort()= of type =sort_expression=. The code in the
Data Library is inside the namespace =mcrl2::new_data=. Let's look at a simple example:

    #include "mcrl2/new_data/data.h"
    #include <cassert>

    using namespace mcrl2::data;

    int main(int argc, char* argv[])
    {
      MCRL2_ATERMPP_INIT(argc, argv)

      data_expression two   = sort_nat::nat(2);
      data_expression three = sort_nat::nat(3);
      data_expression five  = sort_nat::plus(two, three);

      assert(five.sort() == sort_nat::nat());
      return 0;
    }

[include predefined_sorts.qbk]

[include sort_expressions.qbk]

[include data_operations.qbk]

[include data_creation.qbk]

[include special_expressions.qbk]

[endsect]

[include data_specifications.qbk]

[include data_rewriter.qbk]

[include pbes_rewriter.qbk]

[/ include data_enumerator.qbk]
