#Redefine default definitions using autoconf
HOST_OS            = @HOST_OS@
CC                 = @CC@
CFLAGS             = @CFLAGS@
CPP                = @CPP@
CPPFLAGS           = -I. @CPPFLAGS@
CXX                = @CXX@
CXXFLAGS           = @CXXFLAGS@
LDFLAGS            = -Wl,-rpath,$(libdir) -rdynamic -L. -Lsvc @LDFLAGS@

LIBDL              = -ldl

TREE_ROOT          = @abs_top_srcdir@/
MAXIMUM_REVISION  := $(TREE_ROOT)utility/maximum_revision
CONFIG            := $(TREE_ROOT)config

BUILD_EXPERIMENTAL = @BUILD_EXPERIMENTAL@

ARFLAGS            = crs
INSTALL            = install
STRIP              = strip
RM                 = rm -fr
FLEX               = @FLEX@
GZIP               = gzip -f
LFLAGS             = -I
BISON              = @BISON@
BFLAGS             = @BFLAGS@ -d
ATERM              = @ATERM_NAME@ 
ATERM_CPPFLAGS     = @ATERM_CPPFLAGS@
ATERM_LDFLAGS      = @ATERM_LDFLAGS@
BUILD_ATERM        = @BUILD_ATERM@
USE_LIBXML2        = @USE_LIBXML2@
LIBXML2_CONFIG     = @LIBXML2_CONFIG@
LIBXML2_CPPFLAGS   = @LIBXML2_CPPFLAGS@
LIBXML2_LDFLAGS    = @LIBXML2_LDFLAGS@
USE_XMLTO          = @USE_XMLTO@
XMLTO              = @XMLTO@
USE_WX             = @USE_WX@
WX_CONFIG          = @WX_CONFIG@
WX_LDFLAGS         = $(filter-out -mthreads,@WX_LDFLAGS@)
WX_CPPFLAGS        = $(filter-out -mthreads,@WX_CPPFLAGS@)
USE_BOOST          = @USE_BOOST@
BOOST_PREFIX       = @BOOST_PREFIX@
BJAM               = @abs_top_srcdir@/boost/tools/jam/bin/bjam
BOOST_BUILD       := $(BJAM) address-model=@ADDRESS_WIDTH@ @BUILD_VARIANT@
USE_GLUT           = @USE_GLUT@
GLUT_LDFLAGS       = -lglut

ifeq ($(HOST_OS),WINDOWS)
 # Windows does not have a libdl equivalent
 CPPFLAGS         += -DNO_DYNLOAD
 CXXFLAGS         := $(filter-out -std=c++98,$(CXXFLAGS))
 LIBDL             =
 GLUT_LDFLAGS      = -lopengl32 -lglu32 -lglut32
endif
ifeq ($(HOST_OS),MINGW)
 CPPFLAGS         += -DNO_DYNLOAD -DNO_TIMES_H
 CXXFLAGS         := $(filter-out -std=c++98,$(CXXFLAGS))
 LDFLAGS           = -Wl,-rpath,$(libdir) -L. -Lsvc @LDFLAGS@
 LIBDL             =
 GLUT_LDFLAGS      = -lopengl32 -lglu32 -lglut32
endif
ifeq ($(HOST_OS),CYGWIN)
 CPPFLAGS         += -DNO_DYNLOAD
 CXXFLAGS         := $(filter-out -std=c++98,$(CXXFLAGS))
 LDFLAGS           = -Wl,-rpath,$(libdir) -L. -Lsvc @LDFLAGS@
 LIBDL             =
 GLUT_LDFLAGS      = -lopengl32 -lglu32 -lglut32
endif
ifeq ($(HOST_OS),MACOSX)
 LDFLAGS           = -L. -Lsvc @LDFLAGS@
 GLUT_LDFLAGS      = -framework OpenGL -framework GLUT

 # Environment variable for Mac
 MACOSX_DEPLOYMENT_TARGET = 10.3
 export MACOSX_DEPLOYMENT_TARGET
endif

# Installation directories
prefix             = @prefix@
exec_prefix        = @exec_prefix@
bindir             = @bindir@
libdir             = @libdir@
datadir            = @datadir@
includedir         = @includedir@
infodir            = @infodir@
mandir             = @mandir@

BOOST_FILESYSTEM      = -lboost_filesystem
BOOST_PROGRAM_OPTIONS = -lboost_program_options
BOOST_LDFLAGS         =

ifeq ($(BOOST_PREFIX),boost)
 BUILD_BOOST       = boost/build_completed

 ifeq ($(HOST_OS),LINUX)
  BOOST_LDFLAGS = -Wl,-rpath=$(libdir)
 endif

 BOOST_PREFIX   := @abs_top_srcdir@/$(BOOST_PREFIX)
 BOOST_CPPFLAGS  = -I$(BOOST_PREFIX)

 ifeq ($(HOST_OS),MINGW)
  BOOST_FILESYSTEM      = $(BOOST_PREFIX)/lib/boost_filesystem-s.a
  BOOST_PROGRAM_OPTIONS = $(BOOST_PREFIX)/lib/boost_program_options-s.a
 endif
 ifeq ($(HOST_OS),CYGWIN)
  BOOST_FILESYSTEM      = $(BOOST_PREFIX)/lib/boost_filesystem-s.a
  BOOST_PROGRAM_OPTIONS = $(BOOST_PREFIX)/lib/boost_program_options-s.a
 endif
else
 BOOST_CPPFLAGS = -I$(BOOST_PREFIX)/include
endif

BOOST_LDFLAGS  += -L$(BOOST_PREFIX)/lib

-include $(TREE_ROOT)/distribution
