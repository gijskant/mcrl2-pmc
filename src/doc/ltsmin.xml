<refentry id="ltsmin">
 <info>
  <date>2005-2007</date>
 </info>

<refmeta>
  <refentrytitle>ltsmin</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo class="source">ltsmin</refmiscinfo>
  <refmiscinfo class="version"></refmiscinfo>
  <refmiscinfo class="manual">User Commands</refmiscinfo>
</refmeta>

<refnamediv>
  <refname>ltsmin</refname>
  <refpurpose>minimise an LTS in SVC format (DEPRECATED)</refpurpose>
</refnamediv>

<refsynopsisdiv>
  <cmdsynopsis>
    <command>&ltsmin;</command>
    <arg choice="plain" rep="repeat"><arg choice="opt">&option;</arg></arg>
    <arg choice="plain">&infile;</arg>
    <arg choice="plain">&outfile;</arg>
  </cmdsynopsis>
</refsynopsisdiv>

<refsect1>
  <title>Description</title>
  <para>
    The &ltsmin; tool minimises the labelled transition system (LTS) in the SVC
    format from &infile; using bisimulation reduction and saves the resulting
    LTS to &outfile;.
  </para>

  <para>
    The input SVC file must have been generated by &lpe2lts-lnk;.
  </para>

  <para>
    Note that this tools is deprecated and &ltsconvert-lnk; should be used
    where possible.
  </para>
</refsect1>

<refsect1>
<title>Options</title>
<para>
  Mandatory arguments to long options are mandatory for short options too.
  <variablelist>
  <varlistentry>
    <term>&opt_h;</term>
    <term>&opt_help;</term>
    <listitem>
      <para>
        display help message and terminate
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_version;</term>
    <listitem>
      <para>
        display version information and terminate
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_q;</term>
    <term>&opt_quiet;</term>
    <listitem>
      <para>
        do not display warning messages
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_v;</term>
    <term>&opt_verbose;</term>
    <listitem>
      <para>
        display concise intermediate messages
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_d;</term>
    <term>&opt_debug;</term>
    <listitem>
      <para>
        display detailed intermediate messages
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_s;</term>
    <term>&opt_strong;</term>
    <listitem>
      <para>
        minimise using strong bisimulation (default)
      </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term>&opt_b;</term>
    <term>&opt_branching;</term>
    <listitem>
      <para>
        minimise using branching bisimulation
      </para>
    </listitem>
  </varlistentry>
  
  <varlistentry>
    <term>&opt_a;</term>
    <term>&opt_add;</term>
    <listitem>
      <para>
        do not minimise but save a copy of the original LTS extended with a
        state parameter indicating the bisimulation class a state belongs to
      </para>
    </listitem>
  </varlistentry>
  
  <varlistentry>
    <term>&opt_t;&actname;</term>
    <term>&opt_tau;=&actname;</term>
    <listitem>
      <para>
        consider action with name &actname; to be an internal (tau) action
     </para>
    </listitem>
  </varlistentry>
  </variablelist>
</para>
</refsect1>

<refsect1>
<title>See also</title>
<para>
For minimising other types of LTSs or transforming one type into another see
the &ltsconvert-lnk; tool. 
</para>
</refsect1>

<refsect1>
<title>Author</title>
<para>
  Written by Muck van Weerdenburg. Please send all complaints, comments and bug
  reports to &bugmail;.
</para>
</refsect1>

</refentry>
