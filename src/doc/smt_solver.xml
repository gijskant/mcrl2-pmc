<?xml version="1.0"?>

<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"[
<!ENTITY class_smt_solver "<classname>SMT_Solver</classname>">

<!ENTITY type_virtual "<type>virtual</type>">
<!ENTITY type_abstract "<type>abstract</type>">
<!ENTITY type_const "<type>const</type>">
<!ENTITY type_void "<type>void</type>">
<!ENTITY type_bool "<type>bool</type>">
<!ENTITY type_pchar "<type>char*</type>">
<!ENTITY type_int "<type>int</type>">
<!ENTITY type_string "<type>std::string</type>">
<!ENTITY type_atermappl "<type>ATermAppl</type>">
<!ENTITY type_atermlist "<type>ATermList</type>">
<!ENTITY type_smt_solver_type "<type>SMT_Solver_Type</type>">

<!ENTITY sort_bool "<type>Bool</type>">

<!ENTITY smt_solver_is_satisfiable "<function>SMT_Solver::is_satisfiable</function>">

<!ENTITY solver_ario "<constant>ario</constant>">
<!ENTITY solver_cvc_lite "<constant>cvc-lite</constant>">
<!ENTITY link_ario "<uri>http://www.eecs.umich.edu/~ario/</uri>">
<!ENTITY link_cvc "<uri>http://www.cs.nyu.edu/acsys/cvcl/</uri>">

<!ENTITY par_formula "<parameter>a_formula</parameter>">
<!ENTITY par_bdd "<parameter>a_bdd</parameter>">

<!ENTITY const_solver_type_ario "<constant>solver_type_ario</constant>">
]>

<refentry id="smt_solver">

<refmeta>
<refentrytitle>smt_solver</refentrytitle>
<manvolnum>7</manvolnum>
</refmeta>

<refnamediv>
<refname>smt_solver</refname>
<refpurpose>a base class for SMT solvers that solve formulas in conjunctive normal form</refpurpose>
</refnamediv>

<refsynopsisdiv>
<funcsynopsis>
<funcprototype>
  <funcdef>&type_virtual; &type_abstract; &type_bool; &smt_solver_is_satisfiable;</funcdef>
  <paramdef>&type_atermlist; &par_formula;</paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>

<refsect1>
<title>Description</title>
<para>
  The class &class_smt_solver; is a base class for SMT solvers. SMT stands for satisfiability modulo theories. The advantage of an SMT solver over
  an ordinary SAT solver is that an SMT solver can interpret the functions that are part of the theories it handles. An SMT solver can thus use
  properties of these theories to prove or disprove the satisfiability of formulas.
</para>
<para>
  The method &smt_solver_is_satisfiable; receives a formula in conjunctive normal form as parameter &par_formula; and indicates whether or not this
  formula is satisfiable.
</para>
</refsect1>

<refsect1>
<title>Preconditions</title>
<para>
  The following precondition has to be satisfied for &smt_solver_is_satisfiable;:
  <itemizedlist>
    <listitem>
      <para>
        The argument passed as parameter &par_formula; is a list of expressions of sort &sort_bool; in internal mCRL2 format. The argument
        represents a formula in conjunctive normal form, where the elements of the list represent the clauses
      </para>
    </listitem>
  </itemizedlist>
</para>
</refsect1>

<refsect1>
<title>Author</title>
<para>
  Written by Luc Engelen. Please send all complaints, comments and bug reports to <email>bug@mcrl2.org</email>.
</para>
</refsect1>

</refentry>
