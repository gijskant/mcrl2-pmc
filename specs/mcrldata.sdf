definition

module mcrldata

exports
  sorts
    Name
    Bool
    Number
    List
    Set
    Name-list
    Domain
    Sort-specification
    Sort-declaration
    Constructor-declaration
    Constructor-domain
    Function-specification
    Function-declaration
    Equation-specification
    Variable-declaration
    Variables
    Data-term
    Complex-dt
    Equation-section
    Single-equation
    Process-term
    Renaming
    Variable
    Process-specification
    Process-declaration
    Action-specification
    Action-declaration
%%    Communication-specification
%%    Communication-declaration
    Initial-declaration
    Specification

  lexical syntax
    [\ \t\n]                                           -> LAYOUT
    "%" ~[\n]* "\n"                                    -> LAYOUT
    [a-zA-Z\_] [a-zA-Z0-9\_]*                          -> Name
    "true" | "false"                                   -> Bool {prefer}
    "0" | "-"? [1-9] [0-9]*                            -> Number
  context-free syntax
    "[" { Complex-dt "," }* "]"                        -> List
    "{" Variable "|" Complex-dt "}"                    -> Set
    "{" { Complex-dt "," }* "}"                        -> Set    
    { Name ","}+                                       -> Name-list
    { Name "#"}+                                       -> Domain
    "sort" Sort-declaration+                           -> Sort-specification
    Name                                               -> Sort-declaration
    Name "=" Name "->" Name                            -> Sort-declaration
    Name "=" "List" "(" Name ")"                       -> Sort-declaration
    Name "=" "Set" "(" Name ")"                        -> Sort-declaration
    Name "=" { Constructor-declaration "|" }+          -> Sort-declaration
    Name ( ":" Constructor-domain )? ( "?" Name )?     -> Constructor-declaration
    { ( Name | "(" Name ":" Name ")" ) "#" }+          -> Constructor-domain

    "func" Function-declaration+                       -> Function-specification
    "map" Function-declaration+                        -> Function-specification
    Name-list ":" Domain? "->" Name                    -> Function-declaration
    Variable-declaration? Equation-section             -> Equation-specification
    ( "var" Variables+ )?                              -> Variable-declaration
    Name ":" Name                                      -> Variable
    Name-list ":" Name                                 -> Variables
    Name                                               -> Data-term
    Bool                                               -> Data-term
    Number                                             -> Data-term
    List                                               -> Data-term
    Set                                                -> Data-term
    Name "(" { Complex-dt "," }+ ")"                   -> Data-term
    "(" Complex-dt ")"                                 -> Data-term
    "~" Data-term                                      -> Data-term
    "-" Data-term                                      -> Data-term
    "#" Data-term                                      -> Data-term
    Data-term "~"                                      -> Data-term

    Data-term                                          -> Complex-dt
    "lambda" Variable "." Complex-dt                   -> Complex-dt
    "forall" Variable "." Complex-dt                   -> Complex-dt
    "exists" Variable "." Complex-dt                   -> Complex-dt
    Complex-dt "."   Complex-dt                        -> Complex-dt {left}
    Complex-dt "*"   Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "div" Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "mod" Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "/"   Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "\\"  Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "+"   Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "-"   Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "<"   Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt ">"   Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "<="  Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt ">="  Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "in"  Complex-dt                        -> Complex-dt {non-assoc}
    Complex-dt "|>"  Complex-dt                        -> Complex-dt {right}
    Complex-dt "++"  Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "=="  Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "<>"  Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "&&"  Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "||"  Complex-dt                        -> Complex-dt {assoc}
    Complex-dt "=>"  Complex-dt                        -> Complex-dt {non-assoc}
    "(" Complex-dt ")"                                 -> Complex-dt {bracket}

    "rew" Single-equation+                             -> Equation-section
    Complex-dt "=" Complex-dt                          -> Single-equation       

    Process-term "+" Process-term                      -> Process-term {assoc}
    Process-term "||" Process-term                     -> Process-term {assoc}
    Process-term "||_" Process-term                    -> Process-term {left}
    Process-term "|"   Process-term                    -> Process-term {assoc}
    Process-term "<|" Complex-dt "|>" Process-term     -> Process-term
    Process-term "." Process-term                      -> Process-term {assoc}
    Process-term "@" Data-term                         -> Process-term
    Process-term "<<" Process-term                     -> Process-term {left}
    "delta"                                            -> Process-term
    "tau"                                              -> Process-term
    "encap" "(" "{" Name-list "}" "," Process-term ")" -> Process-term
    "hide" "(" "{" Name-list "}" "," Process-term ")"  -> Process-term
    "rename" "(" "{" { Renaming "," }+ "}" ","         
                                      Process-term ")" -> Process-term
    "sum" "(" Variable "," Process-term ")"            -> Process-term
%%    Name "(" { Complex-dt "," }+ ")"                   -> Process-term
    Name                                               -> Process-term
    "(" Process-term ")"                               -> Process-term {bracket}
    Name "->" Name                                     -> Renaming
    "proc" Process-declaration+                        -> Process-specification
    Name "(" { Variable"," }+ ")" "=" Process-term    -> Process-declaration
    Name "=" Process-term                              -> Process-declaration
    "act" Action-declaration+                          -> Action-specification
    Name-list ":" Domain                               -> Action-declaration
    Name                                               -> Action-declaration
%%    "comm" Communication-declaration+                  -> Communication-specification
%%    Name "|" Name "=" Name                             -> Communication-declaration
    "init" Process-term                                -> Initial-declaration
    Sort-specification                                 -> Specification
    Function-specification                             -> Specification
    Equation-specification                             -> Specification
    Action-specification                               -> Specification
    Communication-specification                        -> Specification
    Process-specification                              -> Specification
    Initial-declaration                                -> Specification
    Specification Specification                        -> Specification  {assoc}

%%  Genspect part

%%    New operations

    "comm" "(" "{" { Communication "," }+ "}" "," Process-term ")" 
                                                       -> Process-term
    "restrict" "(" "{" MName-list "}" "," Process-term ")" 
                                                       -> Process-term
    "allow" "(" "{" MName-list "}" "," Process-term ")" 
                                                       -> Process-term
    { Name "|" }+                                      -> MName
    { MName "," }+                                     -> MName-list
    MName "->" Name                                    -> Communication
    MName 	                                       -> Communication

%%    Syntactic Sugar
    Complex-dt "->" Process-term                       -> Process-term
    Complex-dt | "_"                                   -> PlaceBased-assignment
    Name ":="  PlaceBased-assignment                   -> NameBased-assignment
    Name "(" { PlaceBased-assignment "," }+ ")"        -> Process-term
    Name "(" { NameBased-assignment "," }+ ")"         -> Process-term

  context-free priorities
    { non-assoc: "forall" Variable "." Complex-dt -> Complex-dt
                 "exists" Variable "." Complex-dt -> Complex-dt } >
    Complex-dt "."   Complex-dt -> Complex-dt >
    { non-assoc: Complex-dt "*"   Complex-dt -> Complex-dt
                 Complex-dt "div" Complex-dt -> Complex-dt
                 Complex-dt "mod" Complex-dt -> Complex-dt
                 Complex-dt "/"   Complex-dt -> Complex-dt
                 Complex-dt "\\"  Complex-dt -> Complex-dt } >    
    { non-assoc: Complex-dt "+"   Complex-dt -> Complex-dt
                 Complex-dt "-"   Complex-dt -> Complex-dt } >
    { non-assoc: Complex-dt "<"   Complex-dt -> Complex-dt
                 Complex-dt ">"   Complex-dt -> Complex-dt
                 Complex-dt "<="  Complex-dt -> Complex-dt
                 Complex-dt ">="  Complex-dt -> Complex-dt
                 Complex-dt "in"  Complex-dt -> Complex-dt
                 Complex-dt "|>"  Complex-dt -> Complex-dt 
                 Complex-dt "++"  Complex-dt -> Complex-dt } >
    { non-assoc: Complex-dt "=="  Complex-dt -> Complex-dt
                 Complex-dt "<>"  Complex-dt -> Complex-dt } >
    { non-assoc: Complex-dt "&&"  Complex-dt -> Complex-dt
                 Complex-dt "||"  Complex-dt -> Complex-dt } >
    Complex-dt "=>"  Complex-dt -> Complex-dt >
    "lambda" Variable "." Complex-dt -> Complex-dt, 

    Process-term "|" Process-term -> Process-term > 
    Process-term "@" Data-term -> Process-term >
    { assoc: Process-term "." Process-term -> Process-term
             Complex-dt "->" Process-term  -> Process-term } >
    Process-term "<<" Process-term -> Process-term >
    { non-assoc: Process-term "||" Process-term -> Process-term 
                 Process-term "||_" Process-term -> Process-term } >
    Process-term "<|" Complex-dt "|>" Process-term -> Process-term >
    Process-term "+" Process-term -> Process-term

  context-free start-symbols
    Specification
  
  lexical restrictions
     Name -/- [a-zA-Z0-9\_]
  
  context-free restrictions
    LAYOUT? -/- [\ \t\n]
